apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: code-server
spec:
  title: 'code-server'
  url: 'https://github.com/coder/code-server'
  gitRepo: 'https://github.com/coder/code-server'
  author: 'sealos'
  description: 'Run VS Code on any machine anywhere and access it in the browser'
  readme: 'https://raw.githubusercontent.com/coder/code-server/56d3548fa21df3d738349a68fcfb40495875b712/docs/README.md'
  icon: 'https://avatars.githubusercontent.com/u/95932066?s=96&v=4'
  templateType: inline
  defaults:
    app_name:
      type: string
      value: code-${{ random(8) }}
    time_zone:
      type: string
      value: 'Asia/Shanghai'
  inputs:
    app_host_name:
      description: 'Set app host'
      type: string
      default: code-${{ random(8) }}
      required: true
    custom_domain:
      description: 'Set custom domain'
      type: string
      default: ''
      required: true
    password:
      description: 'Access Password'
      type: string
      default: 'sealos123'
      required: true
    tls_crt:
      description: 'Set tls crt'
      type: string
      default: ''
      required: true
    tls_key:
      description: 'Set tls key'
      type: string
      default: ''
      required: true
    volume_size:
      description: 'Set volume size'
      type: string
      default: '1Gi'
      required: true
    init_shell:
      description: 'Set init shell'
      type: string
      default: '[ ! -d "/home/coder/workspace/code-server-shell" ] && git clone https://github.com/weisiqian/code-server-shell.git /home/coder/workspace/code-server-shell'
      required: false
---
apiVersion: v1
data:
  tls.crt: >-
    ${{ inputs.tls_crt }}
  tls.key: >-
    ${{ inputs.tls_key }}
kind: Secret
metadata:
  name: ${{ defaults.app_name }}-cert
  namespace: ns-admin
type: kubernetes.io/tls
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: codercom/code-server:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: ${{ defaults.app_name }}
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      containers:
        - name: ${{ defaults.app_name }}
          image: codercom/code-server:latest
          env:
            - name: TZ
              value: ${{ defaults.time_zone }}
            - name: PASSWORD
              value: ${{ inputs.password }}
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
            limits:
              cpu: 2000m
              memory: 2Gi
          command:
            - /bin/sh
            - '-c'
          args:
            - |
              export USER_SCRIPT='${{ inputs.init_shell }}' && mkdir -p /home/coder/workspace && ([ -n "$USER_SCRIPT" ] && eval "$USER_SCRIPT" || true) && /usr/bin/entrypoint.sh --bind-addr 0.0.0.0:8080 /home/coder/workspace --proxy-domain=${{ inputs.custom_domain }}
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
          volumeMounts:
            - name: vn-homevn-coder
              mountPath: /home/coder
      volumes: []
      securityContext:
        fsGroup: 1000
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /home/coder
          value: '1'
        name: vn-homevn-coder
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: ${{inputs.volume_size}}
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 8080
  selector:
    app: ${{ defaults.app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ inputs.app_host_name }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ inputs.custom_domain }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 8080
    - host: '*.${{ inputs.custom_domain }}'
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 8080              
  tls:
    - hosts:
        - '${{ inputs.custom_domain }}'
        - '*.${{ inputs.custom_domain }}'
      secretName: ${{ defaults.app_name }}-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@sealos.io
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  secretName: ${{ defaults.app_name }}
  dnsNames:
    - '${{ inputs.custom_domain }}'
  issuerRef:
    name: ${{ defaults.app_name }}
    kind: Issuer
---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ inputs.custom_domain }}
  displayType: normal
  icon: 'https://avatars.githubusercontent.com/u/95932066?s=96&v=4'
  menuData:
    nameColor: text-black
  name: Code Server
  type: iframe
